VAR PRIMES_TO_FIND = 4;
VAR primes_found;
VAR number_to_check = 2;

VAR divisor = 2;
VAR remainder;

VAR prime;

// Main loop (once per prime found).
WHILE primes_found < PRIMES_TO_FIND DO
BEGIN
    // Test each divisor.
    divisor := 2;
    prime := 1;
    WHILE divisor < number_to_check DO
    BEGIN
        remainder := number_to_check;
        // Division loop.
        WHILE remainder >= divisor DO
        BEGIN
            remainder := remainder - divisor;
        END;
        // If evenly divisible...
        IF remainder = 0 THEN
        BEGIN
            divisor := number_to_check; // Exit the loop.
            prime := 0; // 0 means false or not-prime.
        END;
        IF remainder > 0 THEN
        BEGIN
            divisor := divisor + 1;
        END;
    END;
    // The variable "prime" should now indicate whether the number is prime or not.
    IF prime = 1 THEN
    BEGIN
        output_address := 0;
        output_value := number_to_check + 48;
        CALL OUT;
        primes_found := primes_found + 1;
    END;
    // Check the next number.
    number_to_check := number_to_check + 1;
END;

CALL HALT;
