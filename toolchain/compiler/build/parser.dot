// Generated by GNU Bison 3.3.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "../src/parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=dashed label="program"]
  0 -> "0R1" [style=solid]
 "0R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: program . $end\l  2 program: program . statement\l"]
  1 -> 2 [style=solid label="$end"]
  1 -> 3 [style=solid label="TOKEN_VAR"]
  1 -> 4 [style=solid label="TOKEN_IDENTIFIER"]
  1 -> 5 [style=solid label="TOKEN_IF"]
  1 -> 6 [style=solid label="TOKEN_BEGIN"]
  1 -> 7 [style=dashed label="statement"]
  1 -> 8 [style=dashed label="variable_declaration"]
  1 -> 9 [style=dashed label="variable_assignment"]
  1 -> 10 [style=dashed label="conditional"]
  1 -> 11 [style=dashed label="begin_end_block"]
  2 [label="State 2\n\l  0 $accept: program $end .\l"]
  2 -> "2R0" [style=solid]
 "2R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  3 [label="State 3\n\l  7 variable_declaration: TOKEN_VAR . TOKEN_IDENTIFIER\l  8                     | TOKEN_VAR . TOKEN_IDENTIFIER TOKEN_EQUALS TOKEN_CONSTANT\l"]
  3 -> 12 [style=solid label="TOKEN_IDENTIFIER"]
  4 [label="State 4\n\l  9 variable_assignment: TOKEN_IDENTIFIER . TOKEN_COLON_EQUALS expression\l"]
  4 -> 13 [style=solid label="TOKEN_COLON_EQUALS"]
  5 [label="State 5\n\l 10 conditional: TOKEN_IF . condition TOKEN_THEN statement\l"]
  5 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  5 -> 15 [style=solid label="TOKEN_CONSTANT"]
  5 -> 16 [style=solid label="TOKEN_PLUS"]
  5 -> 17 [style=solid label="TOKEN_MINUS"]
  5 -> 18 [style=dashed label="term"]
  5 -> 19 [style=dashed label="expression"]
  5 -> 20 [style=dashed label="condition"]
  5 -> "5R21" [style=solid]
 "5R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 11 begin_end_block: TOKEN_BEGIN . statement_sequence TOKEN_END\l"]
  6 -> 3 [style=solid label="TOKEN_VAR"]
  6 -> 4 [style=solid label="TOKEN_IDENTIFIER"]
  6 -> 5 [style=solid label="TOKEN_IF"]
  6 -> 6 [style=solid label="TOKEN_BEGIN"]
  6 -> 21 [style=dashed label="statement"]
  6 -> 8 [style=dashed label="variable_declaration"]
  6 -> 9 [style=dashed label="variable_assignment"]
  6 -> 10 [style=dashed label="conditional"]
  6 -> 11 [style=dashed label="begin_end_block"]
  6 -> 22 [style=dashed label="statement_sequence"]
  7 [label="State 7\n\l  2 program: program statement .\l"]
  7 -> "7R2" [style=solid]
 "7R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l  3 statement: variable_declaration . TOKEN_SEMICOLON\l"]
  8 -> 23 [style=solid label="TOKEN_SEMICOLON"]
  9 [label="State 9\n\l  4 statement: variable_assignment . TOKEN_SEMICOLON\l"]
  9 -> 24 [style=solid label="TOKEN_SEMICOLON"]
  10 [label="State 10\n\l  5 statement: conditional . TOKEN_SEMICOLON\l"]
  10 -> 25 [style=solid label="TOKEN_SEMICOLON"]
  11 [label="State 11\n\l  6 statement: begin_end_block . TOKEN_SEMICOLON\l"]
  11 -> 26 [style=solid label="TOKEN_SEMICOLON"]
  12 [label="State 12\n\l  7 variable_declaration: TOKEN_VAR TOKEN_IDENTIFIER .\l  8                     | TOKEN_VAR TOKEN_IDENTIFIER . TOKEN_EQUALS TOKEN_CONSTANT\l"]
  12 -> 27 [style=solid label="TOKEN_EQUALS"]
  12 -> "12R7" [style=solid]
 "12R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  9 variable_assignment: TOKEN_IDENTIFIER TOKEN_COLON_EQUALS . expression\l"]
  13 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  13 -> 15 [style=solid label="TOKEN_CONSTANT"]
  13 -> 16 [style=solid label="TOKEN_PLUS"]
  13 -> 17 [style=solid label="TOKEN_MINUS"]
  13 -> 18 [style=dashed label="term"]
  13 -> 28 [style=dashed label="expression"]
  13 -> "13R21" [style=solid]
 "13R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 14 term: TOKEN_IDENTIFIER .\l"]
  14 -> "14R14" [style=solid]
 "14R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 15 term: TOKEN_CONSTANT .\l"]
  15 -> "15R15" [style=solid]
 "15R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 16 term: TOKEN_PLUS . TOKEN_IDENTIFIER\l 18     | TOKEN_PLUS . TOKEN_CONSTANT\l"]
  16 -> 29 [style=solid label="TOKEN_IDENTIFIER"]
  16 -> 30 [style=solid label="TOKEN_CONSTANT"]
  17 [label="State 17\n\l 17 term: TOKEN_MINUS . TOKEN_IDENTIFIER\l 19     | TOKEN_MINUS . TOKEN_CONSTANT\l"]
  17 -> 31 [style=solid label="TOKEN_IDENTIFIER"]
  17 -> 32 [style=solid label="TOKEN_CONSTANT"]
  18 [label="State 18\n\l 20 expression: term . expression\l"]
  18 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  18 -> 15 [style=solid label="TOKEN_CONSTANT"]
  18 -> 16 [style=solid label="TOKEN_PLUS"]
  18 -> 17 [style=solid label="TOKEN_MINUS"]
  18 -> 18 [style=dashed label="term"]
  18 -> 33 [style=dashed label="expression"]
  18 -> "18R21" [style=solid]
 "18R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 22 condition: expression . TOKEN_NOT_EQUALS expression\l 23          | expression . TOKEN_EQUALS expression\l 24          | expression . TOKEN_LESS_THAN expression\l 25          | expression . TOKEN_LESS_THAN_OR_EQUAL_TO expression\l 26          | expression . TOKEN_GREATER_THAN expression\l 27          | expression . TOKEN_GREATER_THAN_OR_EQUAL_TO expression\l"]
  19 -> 34 [style=solid label="TOKEN_EQUALS"]
  19 -> 35 [style=solid label="TOKEN_NOT_EQUALS"]
  19 -> 36 [style=solid label="TOKEN_LESS_THAN"]
  19 -> 37 [style=solid label="TOKEN_LESS_THAN_OR_EQUAL_TO"]
  19 -> 38 [style=solid label="TOKEN_GREATER_THAN"]
  19 -> 39 [style=solid label="TOKEN_GREATER_THAN_OR_EQUAL_TO"]
  20 [label="State 20\n\l 10 conditional: TOKEN_IF condition . TOKEN_THEN statement\l"]
  20 -> 40 [style=solid label="TOKEN_THEN"]
  21 [label="State 21\n\l 12 statement_sequence: statement .\l"]
  21 -> "21R12" [style=solid]
 "21R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 11 begin_end_block: TOKEN_BEGIN statement_sequence . TOKEN_END\l 13 statement_sequence: statement_sequence . statement\l"]
  22 -> 3 [style=solid label="TOKEN_VAR"]
  22 -> 4 [style=solid label="TOKEN_IDENTIFIER"]
  22 -> 5 [style=solid label="TOKEN_IF"]
  22 -> 6 [style=solid label="TOKEN_BEGIN"]
  22 -> 41 [style=solid label="TOKEN_END"]
  22 -> 42 [style=dashed label="statement"]
  22 -> 8 [style=dashed label="variable_declaration"]
  22 -> 9 [style=dashed label="variable_assignment"]
  22 -> 10 [style=dashed label="conditional"]
  22 -> 11 [style=dashed label="begin_end_block"]
  23 [label="State 23\n\l  3 statement: variable_declaration TOKEN_SEMICOLON .\l"]
  23 -> "23R3" [style=solid]
 "23R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l  4 statement: variable_assignment TOKEN_SEMICOLON .\l"]
  24 -> "24R4" [style=solid]
 "24R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l  5 statement: conditional TOKEN_SEMICOLON .\l"]
  25 -> "25R5" [style=solid]
 "25R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l  6 statement: begin_end_block TOKEN_SEMICOLON .\l"]
  26 -> "26R6" [style=solid]
 "26R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l  8 variable_declaration: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_EQUALS . TOKEN_CONSTANT\l"]
  27 -> 43 [style=solid label="TOKEN_CONSTANT"]
  28 [label="State 28\n\l  9 variable_assignment: TOKEN_IDENTIFIER TOKEN_COLON_EQUALS expression .\l"]
  28 -> "28R9" [style=solid]
 "28R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  29 [label="State 29\n\l 16 term: TOKEN_PLUS TOKEN_IDENTIFIER .\l"]
  29 -> "29R16" [style=solid]
 "29R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 18 term: TOKEN_PLUS TOKEN_CONSTANT .\l"]
  30 -> "30R18" [style=solid]
 "30R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 17 term: TOKEN_MINUS TOKEN_IDENTIFIER .\l"]
  31 -> "31R17" [style=solid]
 "31R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l 19 term: TOKEN_MINUS TOKEN_CONSTANT .\l"]
  32 -> "32R19" [style=solid]
 "32R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 20 expression: term expression .\l"]
  33 -> "33R20" [style=solid]
 "33R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 23 condition: expression TOKEN_EQUALS . expression\l"]
  34 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  34 -> 15 [style=solid label="TOKEN_CONSTANT"]
  34 -> 16 [style=solid label="TOKEN_PLUS"]
  34 -> 17 [style=solid label="TOKEN_MINUS"]
  34 -> 18 [style=dashed label="term"]
  34 -> 44 [style=dashed label="expression"]
  34 -> "34R21" [style=solid]
 "34R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 22 condition: expression TOKEN_NOT_EQUALS . expression\l"]
  35 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  35 -> 15 [style=solid label="TOKEN_CONSTANT"]
  35 -> 16 [style=solid label="TOKEN_PLUS"]
  35 -> 17 [style=solid label="TOKEN_MINUS"]
  35 -> 18 [style=dashed label="term"]
  35 -> 45 [style=dashed label="expression"]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 24 condition: expression TOKEN_LESS_THAN . expression\l"]
  36 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  36 -> 15 [style=solid label="TOKEN_CONSTANT"]
  36 -> 16 [style=solid label="TOKEN_PLUS"]
  36 -> 17 [style=solid label="TOKEN_MINUS"]
  36 -> 18 [style=dashed label="term"]
  36 -> 46 [style=dashed label="expression"]
  36 -> "36R21" [style=solid]
 "36R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 25 condition: expression TOKEN_LESS_THAN_OR_EQUAL_TO . expression\l"]
  37 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  37 -> 15 [style=solid label="TOKEN_CONSTANT"]
  37 -> 16 [style=solid label="TOKEN_PLUS"]
  37 -> 17 [style=solid label="TOKEN_MINUS"]
  37 -> 18 [style=dashed label="term"]
  37 -> 47 [style=dashed label="expression"]
  37 -> "37R21" [style=solid]
 "37R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 26 condition: expression TOKEN_GREATER_THAN . expression\l"]
  38 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  38 -> 15 [style=solid label="TOKEN_CONSTANT"]
  38 -> 16 [style=solid label="TOKEN_PLUS"]
  38 -> 17 [style=solid label="TOKEN_MINUS"]
  38 -> 18 [style=dashed label="term"]
  38 -> 48 [style=dashed label="expression"]
  38 -> "38R21" [style=solid]
 "38R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 27 condition: expression TOKEN_GREATER_THAN_OR_EQUAL_TO . expression\l"]
  39 -> 14 [style=solid label="TOKEN_IDENTIFIER"]
  39 -> 15 [style=solid label="TOKEN_CONSTANT"]
  39 -> 16 [style=solid label="TOKEN_PLUS"]
  39 -> 17 [style=solid label="TOKEN_MINUS"]
  39 -> 18 [style=dashed label="term"]
  39 -> 49 [style=dashed label="expression"]
  39 -> "39R21" [style=solid]
 "39R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 10 conditional: TOKEN_IF condition TOKEN_THEN . statement\l"]
  40 -> 3 [style=solid label="TOKEN_VAR"]
  40 -> 4 [style=solid label="TOKEN_IDENTIFIER"]
  40 -> 5 [style=solid label="TOKEN_IF"]
  40 -> 6 [style=solid label="TOKEN_BEGIN"]
  40 -> 50 [style=dashed label="statement"]
  40 -> 8 [style=dashed label="variable_declaration"]
  40 -> 9 [style=dashed label="variable_assignment"]
  40 -> 10 [style=dashed label="conditional"]
  40 -> 11 [style=dashed label="begin_end_block"]
  41 [label="State 41\n\l 11 begin_end_block: TOKEN_BEGIN statement_sequence TOKEN_END .\l"]
  41 -> "41R11" [style=solid]
 "41R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 13 statement_sequence: statement_sequence statement .\l"]
  42 -> "42R13" [style=solid]
 "42R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l  8 variable_declaration: TOKEN_VAR TOKEN_IDENTIFIER TOKEN_EQUALS TOKEN_CONSTANT .\l"]
  43 -> "43R8" [style=solid]
 "43R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 23 condition: expression TOKEN_EQUALS expression .\l"]
  44 -> "44R23" [style=solid]
 "44R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 22 condition: expression TOKEN_NOT_EQUALS expression .\l"]
  45 -> "45R22" [style=solid]
 "45R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 24 condition: expression TOKEN_LESS_THAN expression .\l"]
  46 -> "46R24" [style=solid]
 "46R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 25 condition: expression TOKEN_LESS_THAN_OR_EQUAL_TO expression .\l"]
  47 -> "47R25" [style=solid]
 "47R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 26 condition: expression TOKEN_GREATER_THAN expression .\l"]
  48 -> "48R26" [style=solid]
 "48R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 27 condition: expression TOKEN_GREATER_THAN_OR_EQUAL_TO expression .\l"]
  49 -> "49R27" [style=solid]
 "49R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 10 conditional: TOKEN_IF condition TOKEN_THEN statement .\l"]
  50 -> "50R10" [style=solid]
 "50R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
}
